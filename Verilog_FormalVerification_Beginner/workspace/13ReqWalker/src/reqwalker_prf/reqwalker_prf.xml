<?xml version="1.0" encoding="UTF-8"?>
<testsuites>
<testsuite timestamp="2024-04-10T16:01:07" hostname="DESKTOP-T1I841S" package="reqwalker" id="0" name="prf" tests="20" errors="0" failures="0" time="0" skipped="2">
<properties>
<property name="os" value="Linux"/>
<property name="expect" value="PASS"/>
<property name="status" value="PASS"/>
</properties>
<testcase classname="prf" name="build execution" time="0">
</testcase>
<testcase classname="prf" name="Property ASSERT in reqwalker at reqwalker.v:127.56-128.16" time="0" type="ASSERT" location="reqwalker.v:127.56-128.16" id="$assert$reqwalker.v:127$240">
</testcase>
<testcase classname="prf" name="Property ASSERT in reqwalker at reqwalker.v:134.13-135.25" time="0" type="ASSERT" location="reqwalker.v:134.13-135.25" id="$assert$reqwalker.v:134$241">
</testcase>
<testcase classname="prf" name="Property ASSERT in reqwalker at reqwalker.v:141.8-141.36" time="0" type="ASSERT" location="reqwalker.v:141.8-141.36" id="$assert$reqwalker.v:141$242">
</testcase>
<testcase classname="prf" name="Property ASSERT in reqwalker at reqwalker.v:142.8-142.36" time="0" type="ASSERT" location="reqwalker.v:142.8-142.36" id="$assert$reqwalker.v:142$243">
</testcase>
<testcase classname="prf" name="Property ASSERT in reqwalker at reqwalker.v:143.8-143.36" time="0" type="ASSERT" location="reqwalker.v:143.8-143.36" id="$assert$reqwalker.v:143$244">
</testcase>
<testcase classname="prf" name="Property ASSERT in reqwalker at reqwalker.v:144.8-144.36" time="0" type="ASSERT" location="reqwalker.v:144.8-144.36" id="$assert$reqwalker.v:144$245">
</testcase>
<testcase classname="prf" name="Property ASSERT in reqwalker at reqwalker.v:145.8-145.36" time="0" type="ASSERT" location="reqwalker.v:145.8-145.36" id="$assert$reqwalker.v:145$246">
</testcase>
<testcase classname="prf" name="Property ASSERT in reqwalker at reqwalker.v:146.8-146.36" time="0" type="ASSERT" location="reqwalker.v:146.8-146.36" id="$assert$reqwalker.v:146$247">
</testcase>
<testcase classname="prf" name="Property ASSERT in reqwalker at reqwalker.v:147.8-147.36" time="0" type="ASSERT" location="reqwalker.v:147.8-147.36" id="$assert$reqwalker.v:147$248">
</testcase>
<testcase classname="prf" name="Property ASSERT in reqwalker at reqwalker.v:148.8-148.36" time="0" type="ASSERT" location="reqwalker.v:148.8-148.36" id="$assert$reqwalker.v:148$249">
</testcase>
<testcase classname="prf" name="Property ASSERT in reqwalker at reqwalker.v:149.8-149.36" time="0" type="ASSERT" location="reqwalker.v:149.8-149.36" id="$assert$reqwalker.v:149$250">
</testcase>
<testcase classname="prf" name="Property ASSERT in reqwalker at reqwalker.v:150.8-150.36" time="0" type="ASSERT" location="reqwalker.v:150.8-150.36" id="$assert$reqwalker.v:150$251">
</testcase>
<testcase classname="prf" name="Property ASSERT in reqwalker at reqwalker.v:151.8-151.36" time="0" type="ASSERT" location="reqwalker.v:151.8-151.36" id="$assert$reqwalker.v:151$252">
</testcase>
<testcase classname="prf" name="Property ASSERT in reqwalker at reqwalker.v:156.13-157.31" time="0" type="ASSERT" location="reqwalker.v:156.13-157.31" id="$assert$reqwalker.v:156$253">
</testcase>
<testcase classname="prf" name="Property ASSERT in reqwalker at reqwalker.v:163.84-164.22" time="0" type="ASSERT" location="reqwalker.v:163.84-164.22" id="$assert$reqwalker.v:163$255">
</testcase>
<testcase classname="prf" name="Property ASSERT in reqwalker at reqwalker.v:164.23-165.16" time="0" type="ASSERT" location="reqwalker.v:164.23-165.16" id="$assert$reqwalker.v:164$256">
</testcase>
<testcase classname="prf" name="Property ASSERT in reqwalker at reqwalker.v:169.64-170.35" time="0" type="ASSERT" location="reqwalker.v:169.64-170.35" id="$assert$reqwalker.v:169$257">
</testcase>
<testcase classname="prf" name="Property ASSERT in reqwalker at reqwalker.v:201.62-202.17" time="0" type="ASSERT" location="reqwalker.v:201.62-202.17" id="$assert$reqwalker.v:201$266">
</testcase>
<testcase classname="prf" name="Property COVER in reqwalker at reqwalker.v:173.20-174.33" time="0" type="COVER" location="reqwalker.v:173.20-174.33" id="$cover$reqwalker.v:173$258">
<skipped />
</testcase>
<testcase classname="prf" name="Property COVER in reqwalker at reqwalker.v:205.19-206.37" time="0" type="COVER" location="reqwalker.v:205.19-206.37" id="$cover$reqwalker.v:205$267">
<skipped />
</testcase>
<system-out>SBY 16:01:07 [reqwalker_cvr] Removing directory '/mnt/c/Workspace/NES/NESTang/Verilator_FormalVerification/workspace/13ReqWalker/src/reqwalker_cvr'.
SBY 16:01:07 [reqwalker_prf] Removing directory '/mnt/c/Workspace/NES/NESTang/Verilator_FormalVerification/workspace/13ReqWalker/src/reqwalker_prf'.
SBY 16:01:07 [reqwalker_prf] Copy '/mnt/c/Workspace/NES/NESTang/Verilator_FormalVerification/workspace/13ReqWalker/src/reqwalker.v' to '/mnt/c/Workspace/NES/NESTang/Verilator_FormalVerification/workspace/13ReqWalker/src/reqwalker_prf/src/reqwalker.v'.
SBY 16:01:07 [reqwalker_prf] engine_0: smtbmc
SBY 16:01:07 [reqwalker_prf] base: starting process &quot;cd reqwalker_prf/src; yosys -ql ../model/design.log ../model/design.ys&quot;
SBY 16:01:07 [reqwalker_prf] base: finished (returncode=0)
SBY 16:01:07 [reqwalker_prf] prep: starting process &quot;cd reqwalker_prf/model; yosys -ql design_prep.log design_prep.ys&quot;
SBY 16:01:07 [reqwalker_prf] prep: finished (returncode=0)
SBY 16:01:07 [reqwalker_prf] smt2: starting process &quot;cd reqwalker_prf/model; yosys -ql design_smt2.log design_smt2.ys&quot;
SBY 16:01:07 [reqwalker_prf] smt2: finished (returncode=0)
SBY 16:01:07 [reqwalker_prf] engine_0.basecase: starting process &quot;cd reqwalker_prf; yosys-smtbmc --presat --unroll --noprogress -t 20  --append 0 --dump-vcd engine_0/trace.vcd --dump-yw engine_0/trace.yw --dump-vlogtb engine_0/trace_tb.v --dump-smtc engine_0/trace.smtc model/design_smt2.smt2&quot;
SBY 16:01:07 [reqwalker_prf] engine_0.induction: starting process &quot;cd reqwalker_prf; yosys-smtbmc --presat --unroll -i --noprogress -t 20  --append 0 --dump-vcd engine_0/trace_induct.vcd --dump-yw engine_0/trace_induct.yw --dump-vlogtb engine_0/trace_induct_tb.v --dump-smtc engine_0/trace_induct.smtc model/design_smt2.smt2&quot;
SBY 16:01:07 [reqwalker_prf] engine_0.basecase: ##   0:00:00  Solver: yices
SBY 16:01:07 [reqwalker_prf] engine_0.induction: ##   0:00:00  Solver: yices
SBY 16:01:07 [reqwalker_prf] engine_0.basecase: ##   0:00:00  Checking assumptions in step 0..
SBY 16:01:07 [reqwalker_prf] engine_0.basecase: ##   0:00:00  Checking assertions in step 0..
SBY 16:01:07 [reqwalker_prf] engine_0.induction: ##   0:00:00  Trying induction in step 20..
SBY 16:01:07 [reqwalker_prf] engine_0.induction: ##   0:00:00  Trying induction in step 19..
SBY 16:01:07 [reqwalker_prf] engine_0.basecase: ##   0:00:00  Checking assumptions in step 1..
SBY 16:01:07 [reqwalker_prf] engine_0.basecase: ##   0:00:00  Checking assertions in step 1..
SBY 16:01:07 [reqwalker_prf] engine_0.induction: ##   0:00:00  Trying induction in step 18..
SBY 16:01:07 [reqwalker_prf] engine_0.induction: ##   0:00:00  Temporal induction successful.
SBY 16:01:07 [reqwalker_prf] engine_0.induction: ##   0:00:00  Status: passed
SBY 16:01:07 [reqwalker_prf] engine_0.induction: finished (returncode=0)
SBY 16:01:07 [reqwalker_prf] engine_0.induction: Status returned by engine for induction: pass
SBY 16:01:07 [reqwalker_prf] engine_0.basecase: ##   0:00:00  Checking assumptions in step 2..
SBY 16:01:07 [reqwalker_prf] engine_0.basecase: ##   0:00:00  Checking assertions in step 2..
SBY 16:01:07 [reqwalker_prf] engine_0.basecase: ##   0:00:00  Checking assumptions in step 3..
SBY 16:01:07 [reqwalker_prf] engine_0.basecase: ##   0:00:00  Checking assertions in step 3..
SBY 16:01:07 [reqwalker_prf] engine_0.basecase: ##   0:00:00  Checking assumptions in step 4..
SBY 16:01:07 [reqwalker_prf] engine_0.basecase: ##   0:00:00  Checking assertions in step 4..
SBY 16:01:07 [reqwalker_prf] engine_0.basecase: ##   0:00:00  Checking assumptions in step 5..
SBY 16:01:07 [reqwalker_prf] engine_0.basecase: ##   0:00:00  Checking assertions in step 5..
SBY 16:01:07 [reqwalker_prf] engine_0.basecase: ##   0:00:00  Checking assumptions in step 6..
SBY 16:01:07 [reqwalker_prf] engine_0.basecase: ##   0:00:00  Checking assertions in step 6..
SBY 16:01:07 [reqwalker_prf] engine_0.basecase: ##   0:00:00  Checking assumptions in step 7..
SBY 16:01:07 [reqwalker_prf] engine_0.basecase: ##   0:00:00  Checking assertions in step 7..
SBY 16:01:07 [reqwalker_prf] engine_0.basecase: ##   0:00:00  Checking assumptions in step 8..
SBY 16:01:07 [reqwalker_prf] engine_0.basecase: ##   0:00:00  Checking assertions in step 8..
SBY 16:01:07 [reqwalker_prf] engine_0.basecase: ##   0:00:00  Checking assumptions in step 9..
SBY 16:01:07 [reqwalker_prf] engine_0.basecase: ##   0:00:00  Checking assertions in step 9..
SBY 16:01:07 [reqwalker_prf] engine_0.basecase: ##   0:00:00  Checking assumptions in step 10..
SBY 16:01:07 [reqwalker_prf] engine_0.basecase: ##   0:00:00  Checking assertions in step 10..
SBY 16:01:07 [reqwalker_prf] engine_0.basecase: ##   0:00:00  Checking assumptions in step 11..
SBY 16:01:07 [reqwalker_prf] engine_0.basecase: ##   0:00:00  Checking assertions in step 11..
SBY 16:01:07 [reqwalker_prf] engine_0.basecase: ##   0:00:00  Checking assumptions in step 12..
SBY 16:01:07 [reqwalker_prf] engine_0.basecase: ##   0:00:00  Checking assertions in step 12..
SBY 16:01:07 [reqwalker_prf] engine_0.basecase: ##   0:00:00  Checking assumptions in step 13..
SBY 16:01:07 [reqwalker_prf] engine_0.basecase: ##   0:00:00  Checking assertions in step 13..
SBY 16:01:07 [reqwalker_prf] engine_0.basecase: ##   0:00:00  Checking assumptions in step 14..
SBY 16:01:07 [reqwalker_prf] engine_0.basecase: ##   0:00:00  Checking assertions in step 14..
SBY 16:01:07 [reqwalker_prf] engine_0.basecase: ##   0:00:00  Checking assumptions in step 15..
SBY 16:01:07 [reqwalker_prf] engine_0.basecase: ##   0:00:00  Checking assertions in step 15..
SBY 16:01:07 [reqwalker_prf] engine_0.basecase: ##   0:00:00  Checking assumptions in step 16..
SBY 16:01:07 [reqwalker_prf] engine_0.basecase: ##   0:00:00  Checking assertions in step 16..
SBY 16:01:07 [reqwalker_prf] engine_0.basecase: ##   0:00:00  Checking assumptions in step 17..
SBY 16:01:07 [reqwalker_prf] engine_0.basecase: ##   0:00:00  Checking assertions in step 17..
SBY 16:01:07 [reqwalker_prf] engine_0.basecase: ##   0:00:00  Checking assumptions in step 18..
SBY 16:01:07 [reqwalker_prf] engine_0.basecase: ##   0:00:00  Checking assertions in step 18..
SBY 16:01:07 [reqwalker_prf] engine_0.basecase: ##   0:00:00  Checking assumptions in step 19..
SBY 16:01:07 [reqwalker_prf] engine_0.basecase: ##   0:00:00  Checking assertions in step 19..
SBY 16:01:07 [reqwalker_prf] engine_0.basecase: ##   0:00:00  Status: passed
SBY 16:01:07 [reqwalker_prf] engine_0.basecase: finished (returncode=0)
SBY 16:01:07 [reqwalker_prf] engine_0.basecase: Status returned by engine for basecase: pass
SBY 16:01:07 [reqwalker_prf] summary: Elapsed clock time [H:MM:SS (secs)]: 0:00:00 (0)
SBY 16:01:07 [reqwalker_prf] summary: Elapsed process time [H:MM:SS (secs)]: 0:00:00 (0)
SBY 16:01:07 [reqwalker_prf] summary: engine_0 (smtbmc) returned pass for basecase
SBY 16:01:07 [reqwalker_prf] summary: engine_0 (smtbmc) returned pass for induction
SBY 16:01:07 [reqwalker_prf] summary: engine_0 did not produce any traces
SBY 16:01:07 [reqwalker_prf] summary: successful proof by k-induction.
SBY 16:01:07 [reqwalker_prf] DONE (PASS, rc=0)
</system-out>
<system-err>
</system-err>
</testsuite>
</testsuites>
